#lang racket
(define (triangle m n)
  (cond ((= n 0) 0)
        ((> n m) 0)
        ((<= m 2) 1)
        (else (+ (triangle (- m 1) (- n 1))
                 (triangle (- m 1) n)))))

(triangle 1 1)
(triangle 2 1)
(triangle 2 2)
(triangle 3 1)
(triangle 3 2)
(triangle 3 3)
(triangle 4 1)
(triangle 4 2)
(triangle 4 3)
(triangle 4 4)
(triangle 5 1)
(triangle 5 2)
(triangle 5 3)
(triangle 5 4)
(triangle 5 5)

